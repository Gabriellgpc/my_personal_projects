== Filtro Homomórfico

//Descrição da teoria...
_Em processo de documentação, desculpe..._

Considerando que uma imagem pode ser expressa como o produto dos componentes
de iluminação, latexmath:[i(x,y)] e refletância, latexmath:[r(x,y)].

latexmath:[f(x,y) = i(x,y)r(x,y)]

Esta aplicação se baseia na separação dos componentes, iluminação e refletância, por meio
do logaritmo da imagem, pois pela consideração anterior, conseguimos o seguinte resultado.

latexmath:[z(x,y) = ln(f(x,y)) = ln(i(x,y)) + ln(r(x,y))]

E considerando que o componente de iluminação de uma imagem geralmente é caracterizado
por variações espaciais suaveis, enquanto o componente de refletância tende a variar
abruptamente. Essas características levam a associar o componente de iluminação as baixas
frequências e o de refletância as altas frequências, na transformada de Fourier do logaritmo
de uma imagem.

Com isso podemos controlar significativamente essas propriedades por meio de um filtro homomórfico,
por meio de um filtro, _H(u,v)_ que afete os componentes de baixa e alta frequências de forma diferente
e controláveis.

image::unidade2/filtroHomomorfico/filtragemHomomorfica.svg[title="Passos de uma filtragem homomórfica."]

Com o objetivo de atenuar a influência da iluminação na imagem e realce da refletância, o seguinte filtro passa altas
foi utilizado.

latexmath:[H(u,v) = (\gamma_H - \gamma_L)[1 - e^{\frac{-cD_{(u,v)}^2 }{D_0^2}} ]]

image::unidade2/filtroHomomorfico/Filtro.png[title="Filtro Homomórfico."]

//resultados
video::mHhRPjWedUY[youtube, 640, 480, title="Demonstração do Filtro Homomórfico"]

//código
Download do código completo: link:unidade2/filtroHomomorfico/homo_filter.cpp[homo_filter.cpp]
+++ <details><summary> +++
#*_Clique aqui pra ver o código completo_*#
+++ </summary><div> +++
[source, cpp]
----
include::homo_filter.cpp[]
----
+++ </div></details> +++

//comentarios/descrições do codigo
